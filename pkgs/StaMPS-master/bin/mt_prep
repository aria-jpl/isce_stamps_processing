#!/bin/csh -f

# Interface between Doris and MAINSAR
#
# Andy Hooper, January 2007
#
# ===========================================================================
# 04/2009 AH: Deal with extra first/last line/pixels in master.res
# 10/2009 AH: Fix bug that drops master from calibration
# 10/2009 MA: Oversampling support
# 06/2011 AH: Change azimuth overlap default to 50
# ===========================================================================

### Initial welcome
set PRG = `basename "$0"`
set AUT = "Andy Hooper, January 2007"
echo "$PRG $AUT"
echo " "
set nonomatch

if ($#argv == 0) then
    echo "usage: mt_prep da_thresh [rg_patches az_patches rg_overlap az_overlap]"
    echo "    da_thresh                = (delta) amplitude dispersion"
    echo "                                typical values: 0.4 for PS, 0.6 for SB"
    echo "    rg_patches (default 1)   = number of patches in range"
    echo "    az_patches (default 1)   = number of patches in azimuth"
    echo "    rg_overlap (default 50)  = overlapping pixels between patches in range"
    echo "    az_overlap (default 50) = overlapping pixels between patches in azimuth"
    echo ""
    exit(4)
endif

if ($#argv > 0) then
    set da_thresh = $argv[1]
else 
    set da_thresh = 0.4
endif

if ($#argv > 1) then
    set prg = $argv[2]
else 
    set prg = 1
endif

if ($#argv > 2) then
    set paz = $argv[3]
else 
    set paz = 1
endif

if ($#argv > 3) then
    set overlap_rg = $argv[4]
else 
    set overlap_rg = 50
endif

if ($#argv > 4) then
    set overlap_az = $argv[5]
else 
    set overlap_az = 50
endif

echo "Amplitude Dispersion Threshold:" $da_thresh
echo "Processing" $prg "patch(es) in range and" $paz "in azimuth"
echo " "

set WORKDIR = $cwd
set dirname = `echo $WORKDIR | gawk 'BEGIN {FS = "/"}{print $(NF)}'`


if ($dirname == "SMALL_BASELINES") then
    set INSARDIR = `echo $WORKDIR | gawk 'BEGIN {FS = "/SMALL_BASELINES"}{print $1}'`
    echo "Small Baseline Processing"
    echo " "
else
    set INSARDIR = $WORKDIR
endif

set SLC_OSF = `check_slc_sampling $INSARDIR/master.res`

#set first = `grep 'First_pixel ' $INSARDIR/master.res | gawk 'END {print $4}'` 
#set last = `grep 'Last_pixel ' $INSARDIR/master.res | gawk 'END {print $4}'` 
set first = `get_slc_lp $INSARDIR/master.res | awk '{print $3}'`  # Pixel
set last  = `get_slc_lp $INSARDIR/master.res | awk '{print $4}'`
@ width = ($last - $first) + 1
echo $width > $WORKDIR/width.txt
#set firstl = `grep 'First_line ' $INSARDIR/master.res | gawk 'END {print $4}'` 
#set lastl = `grep 'Last_line ' $INSARDIR/master.res | gawk 'END {print $4}'` 
set firstl = `get_slc_lp $INSARDIR/master.res | awk '{print $1}'` # Line
set lastl  = `get_slc_lp $INSARDIR/master.res | awk '{print $2}'`
@ length = ($lastl - $firstl) + 1
echo $length > $WORKDIR/len.txt

mt_extract_info

# Calibrate amplitudes
if ($dirname == "SMALL_BASELINES") then
    \ls $WORKDIR/*/*filtrg.slc > $WORKDIR/calamp.in
    set selfile = $WORKDIR/selsbc.in
else
    if ($SLC_OSF > 1 ) then
      set master_slc = `\ls $INSARDIR/[1,2]*_crop_ovs.slc`  # MA
      echo "[INFO  ]  Using oversampled $master_slc"
    else
      set master_slc = `\ls $INSARDIR/[1,2]*_crop.slc`
    endif
    if (`grep complex_short $INSARDIR/master.res | gawk '{print $1}'` != "") then
       if ($SLC_OSF > 1 ) then
         ln -s $master_slc $master_slc.cr4  # MA assuming oversampled data is cr4
       else
         cpxfiddle -w $width -fci2 -ofloat -qnormal $master_slc  > $master_slc.cr4 
       endif
       echo $master_slc.cr4 > $WORKDIR/calamp.in
    else
       echo $master_slc > $WORKDIR/calamp.in
    endif
    \ls $INSARDIR/*/slave_res.slc >> $WORKDIR/calamp.in
    set selfile = $WORKDIR/selpsc.in
endif
calamp calamp.in $width $WORKDIR/calamp.out

# Set up patches
echo $da_thresh > $selfile
echo $width >> $selfile
###cat calamp.out | gawk '{print "../"$0}' >> selpsc.in
cat $WORKDIR/calamp.out >> $selfile

@ width_p = $width / $prg
echo $width_p
@ length_p = $length / $paz
echo $length_p
set irg = 0
set iaz = 0
set ip = 0
while ($irg < $prg)
    @ irg = $irg + 1
    while ($iaz < $paz)
        @ iaz = $iaz + 1
        @ ip = $ip + 1
        @ start_rg1 = $width_p * ($irg - 1) + 1
        @ start_rg = $start_rg1 - $overlap_rg
        if ($start_rg < 1) then
            set start_rg = 1
        endif
        @ end_rg1 = $width_p * $irg
        @ end_rg = $end_rg1 + $overlap_rg
        if ($end_rg > $width) then
            @ end_rg = $width
        endif
        @ start_az1 = $length_p * ($iaz - 1) + 1
        @ start_az = $start_az1 - $overlap_az
        if ($start_az < 1) then
            set start_az = 1
        endif
        @ end_az1 = $length_p * $iaz
        @ end_az = $end_az1 + $overlap_az

        if ($end_az > $length) then
            @ end_az = $length
        endif

        if (! -e PATCH_$ip) then
            mkdir PATCH_$ip
        endif
        cd PATCH_$ip
        echo $start_rg > patch.in
        echo $end_rg >> patch.in
        echo $start_az >> patch.in
        echo $end_az >> patch.in
        echo $start_rg1 > patch_noover.in
        echo $end_rg1 >> patch_noover.in
        echo $start_az1 >> patch_noover.in
        echo $end_az1 >> patch_noover.in
        cd ..
    end
    set iaz = 0
end


echo $width > pscphase.in
\ls $WORKDIR/*/cint.minrefdem.raw >> pscphase.in
#cat tmp.$$ | gawk '{print "../"$0}' >> pscphase.in
#rm -rf tmp.$$

echo $width > psclonlat.in
echo $INSARDIR'/lon.raw' >> psclonlat.in
echo $INSARDIR'/lat.raw' >> psclonlat.in

echo $width > pscdem.in
echo $INSARDIR'/dem_radar_i.raw' >> pscdem.in

\ls -d PATCH_* > patch.list
mt_extract_cands
