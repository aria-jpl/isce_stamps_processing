#!/bin/csh -f

# Interface between GSAR and MAINSAR
#
# Andy Hooper, September 2015
#
# ===========================================================================
# Expected files in specified data directory:
# PS:
#   insar_*.gsar (one for each interferogram)
#   insar_*.gsar.xml (one for each interferogram)
#   longitude.gsar
#   longitude.gsar.xml
#   latitude.gsar
#   height.gsar
#   incangle.gsar
#   mean_amplitude.gsar
#
# SB: not yet implemented
#
# A new directory is created in the current directory called INSAR_YYYYMMDD
#   
# ===========================================================================
# ===========================================================================

### Initial welcome
set PRG = `basename "$0"`
set AUT = "Andy Hooper, September 2015"
echo "$PRG $AUT"
echo " "
set nonomatch

if ($#argv < 2) then
    echo "usage: mt_prep_gsar yyyymmdd datadir da_thresh [rg_patches az_patches rg_overlap az_overlap maskfile]"
    echo "    yyyymmdd                 = master date"
    echo "    datadir                  = data directory (with expected structure)"
    echo "    da_thresh                = (delta) amplitude dispersion threshold"
    echo "                                typical values: 0.4 for PS, 0.6 for SB"
    echo "    rg_patches (default 1)   = number of patches in range"
    echo "    az_patches (default 1)   = number of patches in azimuth"
    echo "    rg_overlap (default 50)  = overlapping pixels between patches in range"
    echo "    az_overlap (default 50) = overlapping pixels between patches in azimuth"
    echo "    maskfile (optional) char file, same dimensions as slcs, 0 to include, 1 otherwise"
    echo ""
    exit(4)
endif

set master = $argv[1]
set datadir = $argv[2]


if ($#argv > 3) then
    set prg = $argv[4]
else 
    set prg = 1
endif

if ($#argv > 4) then
    set paz = $argv[5]
else 
    set paz = 1
endif

if ($#argv > 5) then
    set overlap_rg = $argv[6]
else 
    set overlap_rg = 50
endif

if ($#argv > 6) then
    set overlap_az = $argv[7]
else 
    set overlap_az = 50
endif

if ($#argv > 7) then
    set maskfile = $argv[8]
    if (! -e $maskfile) then
       echo $maskfile " does not exist, exiting"
       exit 2
    endif
else 
    set maskfile = ""
endif


mkdir INSAR_$master >& /dev/null
cd INSAR_$master
set WORKDIR = $cwd
set dirname = `echo $WORKDIR | gawk 'BEGIN {FS = "/"}{print $(NF)}'`


if ( -e $datadir/SMALL_BASELINES ) then
    echo "Small Baseline Processing"
    echo " "
    set SB_FLAG=1
echo $RSC
else
    set SB_FLAG=0
endif
set RSC = $datadir/longitude.gsar.xml

if ($#argv > 2) then
    set da_thresh = $argv[3]
else 
    if ($SB_FLAG == 1) then
        set da_thresh = 0.6
    else
        set da_thresh = 0.4
    endif
endif
echo "Amplitude Dispersion Threshold:" $da_thresh
echo "Processing" $prg "patch(es) in range and" $paz "in azimuth"
echo " "

set length   = `gawk 'BEGIN {FS=">"} /<ysize/ {print $2; exit}' < $RSC | gawk 'BEGIN {FS="<"} {print $1}'`
set width   = `gawk 'BEGIN {FS=">"} /<xsize/ {print $2; exit}' < $RSC | gawk 'BEGIN {FS="<"} {print $1}'`

echo "gsar" > processor.txt
if ($SB_FLAG == 1) then
    matlab -nojvm -nosplash -nodisplay < $STAMPS/matlab/sb_parms_initial.m > sb_parms_initial.log
else
    matlab -nojvm -nosplash -nodisplay < $STAMPS/matlab/ps_parms_initial.m > ps_parms_initial.log
endif

echo $width > $WORKDIR/width.txt
echo $length > $WORKDIR/len.txt
echo $RSC > $WORKDIR/rsc.txt

# Calibrate amplitudes
\rm -f $WORKDIR/calamp.in >& /dev/null
if ($SB_FLAG == 1) then
    \ls $datadir/SMALL_BASELINES/*/*.*slc >> $WORKDIR/calamp.in
    set selfile = $WORKDIR/selsbc.in
else
    \ls $datadir/insar*gsar >> $WORKDIR/calamp.in
    set selfile = $WORKDIR/selpsc.in
endif
calamp calamp.in $width $WORKDIR/calamp.out f 0 $maskfile

# Set up patches
echo $da_thresh > $selfile
echo $width >> $selfile
cat $WORKDIR/calamp.out >> $selfile

@ width_p = $width / $prg
echo $width_p
@ length_p = $length / $paz
echo $length_p
set irg = 0
set iaz = 0
set ip = 0
\rm -rf PATCH_* >& /dev/null
\rm -rf patch.list
while ($irg < $prg)
    @ irg = $irg + 1
    while ($iaz < $paz)
        @ iaz = $iaz + 1
        @ ip = $ip + 1
        @ start_rg1 = $width_p * ($irg - 1) + 1
        @ start_rg = $start_rg1 - $overlap_rg
        if ($start_rg < 1) then
            set start_rg = 1
        endif
        @ end_rg1 = $width_p * $irg
        @ end_rg = $end_rg1 + $overlap_rg
        if ($end_rg > $width) then
            @ end_rg = $width
        endif
        @ start_az1 = $length_p * ($iaz - 1) + 1
        @ start_az = $start_az1 - $overlap_az
        if ($start_az < 1) then
            set start_az = 1
        endif
        @ end_az1 = $length_p * $iaz
        @ end_az = $end_az1 + $overlap_az

        if ($end_az > $length) then
            @ end_az = $length
        endif

        if (! -e PATCH_$ip) then
            mkdir PATCH_$ip
        endif

        echo PATCH_$ip >> patch.list

        cd PATCH_$ip
        echo $start_rg > patch.in
        echo $end_rg >> patch.in
        echo $start_az >> patch.in
        echo $end_az >> patch.in
        echo $start_rg1 > patch_noover.in
        echo $end_rg1 >> patch_noover.in
        echo $start_az1 >> patch_noover.in
        echo $end_az1 >> patch_noover.in
        cd ..
    end
    set iaz = 0
end


echo $width > pscphase.in
if ($SB_FLAG == 1) then
    \ls $datadir/SMALL_BASELINES/*/*.diff >> pscphase.in
else
    \ls $datadir/insar*gsar >> pscphase.in
endif

echo $width > psclon.in
echo $datadir/longitude.gsar >> psclon.in

echo $width > psclat.in
echo $datadir/latitude.gsar >> psclat.in

echo $width > pscdem.in
echo $datadir/height.gsar >> pscdem.in

echo $width > pscinc.in
echo $datadir/incangle.gsar >> pscinc.in

echo $width > pscsquint.in
echo $datadir/squintangle.gsar >> pscsquint.in

\ls $datadir/coreg*$master*.gsar > masteramp.in



#\ls -d PATCH_* > patch.list
mt_extract_cands_gsar f f d d d d d 0 $maskfile

